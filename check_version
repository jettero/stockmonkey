#!/usr/bin/perl

use strict;
use Time::Local qw(timelocal_nocheck);

my @pm  = glob "Business/*.pm";
my $die = 0;
for my $pm (@pm) {
    open(my $in, '-|', qw(git blame), $pm) or die $!;

    my $max_usec = 0;
    my $ver_usec = 0;
    my $ver = 0;
    while(<$in>) {

        warn do { my $x = "[$pm] $_ sucks"; $x =~ s/[\r\n]//g; "$x\n" }

        unless
        my ($commit, $date, $code)
            = m/^(\S+).+?\(.+?(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}).+?\)\s*(.+)/;
              # 0fc96ce3 (Paul Miller 2008-06-15 19:05:56 -0400   7) our $VERSION = 2.3;
              # 0fc96ce3 Business/DMI.pm (Paul Miller 2008-06-15 19:05:56 -0400   7) our $VERSION = 2.3;

        my ($year,$mon,$mday,$hour,$min,$sec) = split m/\D+/, $date;
        my $usec = timelocal_nocheck($sec,$min,$hour,$mday,$mon-1,$year);

        $max_usec = $usec if $usec > $max_usec;

        if( $code =~ m/\$VERSION\s*=\s*([\.\d]+)/ ) {
            $ver = $1;
            $ver_usec = $usec;
        }
    }

    unless( $ver ) {
        warn "\e[1;33mno version detected in $pm\e[m\n";
        $die ++;
    }

    if( $ver and $ver_usec < $max_usec ) {
        warn "\e[31m VERSION=$ver on $pm is probably too low\e[m\n";
        $die ++;
    }
}

for my $pm (@pm) {
    my ($base) = $pm =~ m/([^\/]+)\.pm$/;
    for my $reqfile (qw(lib/Math/Business/StockMonkey.pod README registration_todo)) {
        local $/;
        open my $in, $reqfile or die $!;
        my $txt = <$in>;
        unless( $txt =~ m/Math::Business::$base/m ) {
            warn "\e[31m $base is missing from $reqfile\e[m\n";
            $die ++;
        }
    }
}

exit $die;
